import{_ as e,r as c,o as l,c as r,a as s,d as n,w as t,b as p,e as o}from"./app-d46ce3b0.js";const u={},k=o(`<h1 id="react-api" tabindex="-1"><a class="header-anchor" href="#react-api" aria-hidden="true">#</a> React API</h1><h2 id="dndprovier" tabindex="-1"><a class="header-anchor" href="#dndprovier" aria-hidden="true">#</a> DndProvier</h2><p>react 拖拽作用域组件</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> PureComponent<span class="token punctuation">,</span> FunctionComponentElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">type</span> <span class="token class-name">IDnDProvider</span><span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">IDragHooksParams</span><span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">IDropHooksParams</span><span class="token punctuation">,</span> DragCore<span class="token punctuation">,</span> DropCore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;easy-dnd&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">IDndProviderProps</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 拖拽类型 */</span>
    type<span class="token operator">?</span><span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dndMode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 延时多久触发dragenter */</span>
    delay<span class="token operator">?</span><span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;delay&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** react子节点 */</span>
    children<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">DndProvider</span> <span class="token keyword">extends</span> <span class="token class-name">PureComponent<span class="token operator">&lt;</span>IDndProviderProps<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 每个Dnd下都有属于自己的上下文, 里面可以存储一些基本的拖拽数据 */</span>
    dndCtx<span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token operator">:</span> IDndProviderProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> FunctionComponentElement<span class="token operator">&lt;</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;react&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ProviderProps<span class="token operator">&lt;</span>IDnDProvider<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>参考</li></ul>`,6),i=o(`<h2 id="drag" tabindex="-1"><a class="header-anchor" href="#drag" aria-hidden="true">#</a> Drag</h2><p>继承至 DragCore，扩展 dragRef 方法</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Drag<span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> Rubbish <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">DragCore<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token function-variable function">dragRef</span><span class="token operator">:</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>指南</li></ul>`,5),d=o(`<h2 id="drop" tabindex="-1"><a class="header-anchor" href="#drop" aria-hidden="true">#</a> Drop</h2><p>继承至 DropCore，扩展 dropRef 方法</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Drop<span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> Rubbish <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">DropCore<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    dropRef<span class="token operator">:</span> <span class="token punctuation">(</span>forwardRef<span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> Drag<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragRef&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>指南</li></ul>`,5),g=o(`<h2 id="usedrag" tabindex="-1"><a class="header-anchor" href="#usedrag" aria-hidden="true">#</a> useDrag</h2><p>创建Drag对象</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IDragHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>IDragCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;config&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    config<span class="token operator">:</span> Omit<span class="token operator">&lt;</span>IDragCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;context&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useDrag</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> Rubbish <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> IDragHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Drag<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span>
</code></pre></div><ul><li>参考</li></ul>`,5),m=o(`<h2 id="usedrop" tabindex="-1"><a class="header-anchor" href="#usedrop" aria-hidden="true">#</a> useDrop</h2><p>创建Drop对象</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IDropHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>IDropCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;config&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    config<span class="token operator">:</span> Omit<span class="token operator">&lt;</span>IDropCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;context&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useDrop</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> IDropHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Drop<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span>
</code></pre></div><ul><li>参考</li></ul>`,5);function h(D,y){const a=c("RouterLink");return l(),r("div",null,[k,s("p",null,[n(a,{to:"/react.html#dndprovider"},{default:t(()=>[p("React下使用 > DndProvider")]),_:1})]),i,s("p",null,[n(a,{to:"/react.html#class%E4%B8%8B%E4%BD%BF%E7%94%A8"},{default:t(()=>[p("React下使用 > class")]),_:1})]),d,s("p",null,[n(a,{to:"/react.html#class%E4%B8%8B%E4%BD%BF%E7%94%A8"},{default:t(()=>[p("React下使用 > class")]),_:1})]),g,s("p",null,[n(a,{to:"/react.html#usedrag"},{default:t(()=>[p("React下使用 > hooks > useDrag")]),_:1})]),m,s("p",null,[n(a,{to:"/react.html#usedrop"},{default:t(()=>[p("React下使用 > hooks > useDrop")]),_:1})])])}const f=e(u,[["render",h],["__file","react.html.vue"]]);export{f as default};
