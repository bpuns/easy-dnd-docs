import{_ as r,r as e,o as l,c as u,b as a,a as s,w as p,d as n,e as o}from"./app-168742e2.js";const i={},k=o(`<h1 id="vue-api" tabindex="-1"><a class="header-anchor" href="#vue-api" aria-hidden="true">#</a> Vue API</h1><h2 id="dndprovier" tabindex="-1"><a class="header-anchor" href="#dndprovier" aria-hidden="true">#</a> DndProvier</h2><p>vue拖拽作用域组件</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> DndProvider<span class="token operator">:</span> DefineComponent<span class="token operator">&lt;</span>
  <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 拖拽类型 */</span>
    type<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token constant">DND_MODE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** dragEnter延时时间 */</span>
    delay<span class="token operator">:</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> NumberConstructor<span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token operator">&gt;</span>
</code></pre></div><ul><li>参考</li></ul>`,6),d=o(`<h2 id="drag" tabindex="-1"><a class="header-anchor" href="#drag" aria-hidden="true">#</a> Drag</h2><p>继承至 DragCore，扩展 dragRef 方法</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Drag<span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> Rubbish <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">DragCore<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token function-variable function">dragRef</span><span class="token operator">:</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="drop" tabindex="-1"><a class="header-anchor" href="#drop" aria-hidden="true">#</a> Drop</h2><p>继承至 DropCore，扩展 dropRef 方法</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Drop<span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> Rubbish <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">DropCore<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    dropRef<span class="token operator">:</span> <span class="token punctuation">(</span>forwardRef<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> Drag<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragRef&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="usedrag" tabindex="-1"><a class="header-anchor" href="#usedrag" aria-hidden="true">#</a> useDrag</h2><p>创建Drag对象</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IDragHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>IDragCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;config&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    config<span class="token operator">:</span> Omit<span class="token operator">&lt;</span>IDragCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;context&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useDrag</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> Rubbish <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> IDragHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Drag<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span>
</code></pre></div><ul><li>参考</li></ul>`,13),g=o(`<h2 id="usedrop" tabindex="-1"><a class="header-anchor" href="#usedrop" aria-hidden="true">#</a> useDrop</h2><p>创建Drop对象</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IDropHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>IDropCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;config&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    config<span class="token operator">:</span> Omit<span class="token operator">&lt;</span>IDropCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;context&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useDrop</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> IDropHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Drop<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span>
</code></pre></div><ul><li>参考</li></ul>`,5),h={id:"usedraglisten",tabindex:"-1"},b=a("a",{class:"header-anchor",href:"#usedraglisten","aria-hidden":"true"},"#",-1),m=o(`<p>监听全局拖拽</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IListenDragHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>IListenDragParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;context&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useDragListen</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> IListenDragHooksParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考</li></ul>`,3);function D(f,y){const t=e("RouterLink"),c=e("Badge");return l(),u("div",null,[k,a("p",null,[s(t,{to:"/vue.html#dndprovider"},{default:p(()=>[n("Vue下使用 > DndProvider")]),_:1})]),d,a("p",null,[s(t,{to:"/vue.html#usedrag"},{default:p(()=>[n("Vue下使用 > hooks > useDrag")]),_:1})]),g,a("p",null,[s(t,{to:"/vue.html#usedrop"},{default:p(()=>[n("Vue下使用 > hooks > useDrop")]),_:1})]),a("h2",h,[b,n(" useDragListen"),s(c,{text:"1.1.0+",vertical:"top"})]),m,a("p",null,[s(t,{to:"/vue.html#useDragListen"},{default:p(()=>[n("Vue下使用 > hooks > useDrop")]),_:1})])])}const _=r(i,[["render",D],["__file","vue.html.vue"]]);export{_ as default};
