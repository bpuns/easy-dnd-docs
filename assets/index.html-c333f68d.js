import{_ as l,r as e,o as i,c as k,b as a,a as s,w as p,d as n,e as t}from"./app-168742e2.js";const u={},d=t(`<h1 id="核心-api" tabindex="-1"><a class="header-anchor" href="#核心-api" aria-hidden="true">#</a> 核心 API</h1><h2 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h2><h3 id="dnd-mode" tabindex="-1"><a class="header-anchor" href="#dnd-mode" aria-hidden="true">#</a> DND_MODE</h3><p>用于标识当前拖拽事件调用逻辑</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> <span class="token constant">DND_MODE</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 范围模式 */</span>
    <span class="token constant">SCOPE</span> <span class="token operator">=</span> <span class="token string">&quot;scope&quot;</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** 自治模式 */</span>
    <span class="token constant">SWARAJ</span> <span class="token operator">=</span> <span class="token string">&quot;swaraj&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>参考</li></ul>`,7),m=t(`<h3 id="dnd-ctx" tabindex="-1"><a class="header-anchor" href="#dnd-ctx" aria-hidden="true">#</a> DND_CTX</h3><p>库内部使用，用于标识上下文</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">DND_CTX</span><span class="token operator">:</span> unique <span class="token builtin">symbol</span>
</code></pre></div><ul><li>详细信息</li></ul>`,5),g=a("code",null,"easy-dnd/vue",-1),b={href:"https://github.com/bpuns/easy-dnd/blob/master/src/vue/index.ts",target:"_blank",rel:"noopener noreferrer"},D=t(`<h3 id="bind-drag" tabindex="-1"><a class="header-anchor" href="#bind-drag" aria-hidden="true">#</a> BIND_DRAG</h3><p>库内部使用，用于标识上下文</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">BIND_DRAG</span><span class="token operator">:</span> unique <span class="token builtin">symbol</span>
</code></pre></div><ul><li>详细信息</li></ul><p>与 DragCore 绑定在一起的 dom 上，会多出一个 key 为 BIND_DRAG 的属性，值是 true</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="createprovider" tabindex="-1"><a class="header-anchor" href="#createprovider" aria-hidden="true">#</a> createProvider</h3><p>用于创建拖拽上下文</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ProviderConfig</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 拖拽类型，有 SCOPE 和 SWARAJ 两种可选 */</span>
    dndMode<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">DND_MODE</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 拖拽延时时间，必须大于等于0 */</span>
    delay<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 创建拖拽作用域下的基本数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>ProviderConfig<span class="token punctuation">}</span> param
 * <span class="token keyword">@returns</span>
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createProvider</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
	<span class="token punctuation">{</span> dndMode<span class="token punctuation">,</span> delay <span class="token punctuation">}</span><span class="token operator">?</span><span class="token operator">:</span> ProviderConfig
<span class="token punctuation">)</span><span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>参考</li></ul>`,12),h=t(`<h3 id="dragcore" tabindex="-1"><a class="header-anchor" href="#dragcore" aria-hidden="true">#</a> DragCore</h3><p>用于创建drag实例</p><ul><li>构造函数类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/** Drag 构造函数参数 */</span>
<span class="token keyword">interface</span> <span class="token class-name">IDragCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 拖动开始触发的方法 */</span>
    dragStart<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDragCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 拖动中触发的方法 */</span>
    drag<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDragCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 拖动结束触发的方法 */</span>
    dragEnd<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDragCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 配置 */</span>
    config<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/** 当前拖拽元素的类型 */</span>
        type<span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragType&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 拖拽元素携带的数据 */</span>
        data<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Data<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 动态添加的className */</span>
        className<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/** 鼠标移入的时候添加的className */</span>
            hover<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
            <span class="token doc-comment comment">/** 该元素拖拽中触发添加的className */</span>
            dragging<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 设置默认是否允许拖拽   true 允许拖拽 | false 不允许拖拽，默认是true */</span>
        defaultDraggable<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 拖拽作用域 */</span>
        context<span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>实例化对象类型</li></ul><p>DragCore 继承至 DragDropBase，允许外部调用的方法有以下三个</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">DragDropBase</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 注册dom */</span>
    <span class="token keyword">abstract</span> <span class="token function-variable function">registerDom</span><span class="token operator">:</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 绑定事件 */</span>
    <span class="token keyword">abstract</span> <span class="token function-variable function">subscribe</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 取消绑定事件 */</span>
    <span class="token keyword">abstract</span> <span class="token function-variable function">unSubscribe</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>参考</li></ul>`,8),v=t(`<h3 id="dropcore" tabindex="-1"><a class="header-anchor" href="#dropcore" aria-hidden="true">#</a> DropCore</h3><p>用于创建drop实例</p><ul><li>构造函数类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/** Drop 构造函数参数 */</span>
<span class="token keyword">interface</span> <span class="token class-name">IDropCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 外部元素进入this元素触发的方法 */</span>
    dragEnter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 外部元素在this元素中移动触发的方法 */</span>
    dragOver<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 外部元素离开this元素触发的方法 */</span>
    dragLeave<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 外部元素放置到this元素触发的方法 */</span>
    drop<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** acceptType里允许接收的元素开始拖拽的时候，会触发此方法 */</span>
    dragStart<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** acceptType里允许接收的元素结束拖拽的时候，会触发此方法 */</span>
    dragEnd<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 配置 */</span>
    config<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 验证是否允许放置在这里
         * ！！！注意！！！
         * 请不要在canDrop中去做一些判断位置的操作
         * 在这个函数在整个拖拽生命周期内返回的值必须是一样的
         */</span>
        canDrop<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>monitor<span class="token operator">:</span> Pick<span class="token operator">&lt;</span>IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;event&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;getContext&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;getDragData&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;getDragType&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;getDropInstance&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 在这里配置允许接收的元素的类型 */</span>
        acceptType<span class="token operator">:</span> Set<span class="token operator">&lt;</span>IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragType&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 动态添加的className */</span>
        className<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/** 允许放置的元素进入添加的className */</span>
            dragEnter<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
            <span class="token doc-comment comment">/** 允许放置的元素开始拖拽添加的className */</span>
            canDrop<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 上下文 */</span>
        context<span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>实例化对象类型</li></ul><p>DropCore 继承至 DragDropBase，允许外部调用的方法有以下三个</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">DragDropBase</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 注册dom */</span>
    <span class="token keyword">abstract</span> <span class="token function-variable function">registerDom</span><span class="token operator">:</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 绑定事件 */</span>
    <span class="token keyword">abstract</span> <span class="token function-variable function">subscribe</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 取消绑定事件 */</span>
    <span class="token keyword">abstract</span> <span class="token function-variable function">unSubscribe</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>参考</li></ul>`,8),y=t(`<h3 id="createdragmonitor" tabindex="-1"><a class="header-anchor" href="#createdragmonitor" aria-hidden="true">#</a> createDragMonitor</h3><p>用于创建drag事件回调中的事件对象，</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IDragCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Pick<span class="token operator">&lt;</span>IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;getRubbish&#39;</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 拖拽事件对象 */</span>
    event<span class="token operator">:</span> DragEvent<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 获取dnd上下文 */</span>
    <span class="token function-variable function">getContext</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>指南</li></ul>`,5),f=t(`<h3 id="createdropmonitor" tabindex="-1"><a class="header-anchor" href="#createdropmonitor" aria-hidden="true">#</a> createDropMonitor</h3><p>用于创建drop事件回调中的事件对象</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IDropCoreMonitor<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Pick<span class="token operator">&lt;</span>IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;getRubbish&#39;</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 获取dropDom的尺寸 */</span>
    <span class="token function-variable function">getDomRect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DOMRect<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 拖拽事件对象 */</span>
    event<span class="token operator">:</span> DragEvent<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 获取整个dnd的上下文 */</span>
    <span class="token function-variable function">getContext</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 获取正在拖拽的元素的type */</span>
    <span class="token function-variable function">getDragType</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragType&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 获取正在拖拽的元素的dom */</span>
    <span class="token function-variable function">getDragDom</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragDom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 获取拖拽元素的data */</span>
    <span class="token function-variable function">getDragData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dragData&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 获取dropInstance */</span>
    <span class="token function-variable function">getDropInstance</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;dropInstance&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 判断dragDom是否在dropDom的上侧区域
     * <span class="token keyword">@param</span> <span class="token parameter">domRect</span>        DOMRect
     * <span class="token keyword">@param</span> <span class="token parameter">middleExists</span>   false|鼠标在上50%的位置就返回true(默认值)  true|鼠标在上33.333%的位置就返回true
     */</span>
    <span class="token function-variable function">isOverTop</span><span class="token operator">:</span> <span class="token punctuation">(</span>domRect<span class="token operator">?</span><span class="token operator">:</span> DOMRect<span class="token punctuation">,</span> middleExists<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 判断dragDom是否在dropDom的下侧区域
     * <span class="token keyword">@param</span> <span class="token parameter">domRect</span>        DOMRect
     * <span class="token keyword">@param</span> <span class="token parameter">middleExists</span>   false|鼠标在下50%的位置就返回true(默认值)  true|鼠标在下33.333%的位置就返回true
     */</span>
    <span class="token function-variable function">isOverBottom</span><span class="token operator">:</span> <span class="token punctuation">(</span>domRect<span class="token operator">?</span><span class="token operator">:</span> DOMRect<span class="token punctuation">,</span> middleExists<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 判断dragDom是否在dropDom的左侧区域
     * <span class="token keyword">@param</span> <span class="token parameter">domRect</span>        DOMRect
     * <span class="token keyword">@param</span> <span class="token parameter">middleExists</span>   false|鼠标在左50%的位置就返回true(默认值)  true|鼠标在左33.333%的位置就返回true
     */</span>
    <span class="token function-variable function">isOverLeft</span><span class="token operator">:</span> <span class="token punctuation">(</span>domRect<span class="token operator">?</span><span class="token operator">:</span> DOMRect<span class="token punctuation">,</span> middleExists<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 判断dragDom是否在dropDom的右侧区域
     * <span class="token keyword">@param</span> <span class="token parameter">domRect</span>        DOMRect
     * <span class="token keyword">@param</span> <span class="token parameter">middleExists</span>   false|鼠标在右50%的位置就返回true(默认值)  true|鼠标在右33.333%的位置就返回true
     */</span>
    <span class="token function-variable function">isOverRight</span><span class="token operator">:</span> <span class="token punctuation">(</span>domRect<span class="token operator">?</span><span class="token operator">:</span> DOMRect<span class="token punctuation">,</span> middleExists<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 判断正在拖拽的元素是否在横向的 &gt; 33.333% &amp; &lt; 66.666% 位置 */</span>
    <span class="token function-variable function">isOverRowCenter</span><span class="token operator">:</span> <span class="token punctuation">(</span>domRect<span class="token operator">?</span><span class="token operator">:</span> DOMRect<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 判断正在拖拽的元素是否在纵向的 &gt; 33.333% &amp; &lt; 66.666% 位置 */</span>
    <span class="token function-variable function">isOverColumnCenter</span><span class="token operator">:</span> <span class="token punctuation">(</span>domRect<span class="token operator">?</span><span class="token operator">:</span> DOMRect<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>指南</li></ul>`,5),R=t(`<h3 id="iselement" tabindex="-1"><a class="header-anchor" href="#iselement" aria-hidden="true">#</a> isElement</h3><p>用于判断当前变量是否是继承至 HtmlElement</p><ul><li>类型</li></ul><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * 验证元素是否是HtmlElement
 * <span class="token keyword">@param</span> <span class="token parameter">dom</span>
 * <span class="token keyword">@returns</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">isElement</span><span class="token punctuation">(</span>dom<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> dom <span class="token keyword">is</span> HTMLElement<span class="token punctuation">;</span>
</code></pre></div>`,4),x={id:"onlistendrag",tabindex:"-1"},_=a("a",{class:"header-anchor",href:"#onlistendrag","aria-hidden":"true"},"#",-1),E=t(`<p>拖拽监听事件</p><ul><li>类型</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/** 监听拖拽参数 */</span>
<span class="token keyword">type</span> <span class="token class-name">IListenDragParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 拖拽上下文 */</span>
    context<span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 此次拖拽是否需要监听 */</span>
    filter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>ctx<span class="token operator">:</span> IDnDProvider<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">&amp;</span> Pick<span class="token operator">&lt;</span>IDragCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;dragStart&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;drag&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dragEnd&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> Pick<span class="token operator">&lt;</span>IDropCoreConstructorParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;dragEnter&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dragOver&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dragLeave&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;drop&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">onListenDrag</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> IListenDragParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Omit<span class="token operator">&lt;</span>IListenDragParams<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Rubbish<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&quot;context&quot;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">unbind</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>指南</li></ul>`,4);function w(I,B){const o=e("RouterLink"),c=e("ExternalLinkIcon"),r=e("Badge");return i(),k("div",null,[d,a("p",null,[s(o,{to:"/extras.html#%E6%8B%96%E6%8B%BD%E6%A8%A1%E5%BC%8F"},{default:p(()=>[n("进阶 > 上下文高阶配置 > 拖拽模式")]),_:1})]),m,a("p",null,[n("用于 "),g,n("中获取拖拽上下文用到的"),a("a",b,[n("唯一标识"),s(c)]),n("，如果要为第三方库开发桥接文件，可以使用它作为唯一值")]),D,a("p",null,[s(o,{to:"/extras.html#%E4%B8%8A%E4%B8%8B%E6%96%87%E9%AB%98%E9%98%B6%E9%85%8D%E7%BD%AE"},{default:p(()=>[n("进阶 > 上下文高阶配置")]),_:1})]),h,a("p",null,[s(o,{to:"/quickStart.html#%E5%88%9B%E5%BB%BAdrag%E5%AF%B9%E8%B1%A1"},{default:p(()=>[n("快速上手 > 创建drag对象")]),_:1})]),v,a("p",null,[s(o,{to:"/quickStart.html#%E5%88%9B%E5%BB%BAdrop%E5%AF%B9%E8%B1%A1"},{default:p(()=>[n("快速上手 > 创建drop对象")]),_:1})]),y,a("p",null,[s(o,{to:"/extras.html#dragmonitor"},{default:p(()=>[n("进阶 > monitor > DragMonitor")]),_:1})]),f,a("p",null,[s(o,{to:"/extras.html#dropmonitor"},{default:p(()=>[n("进阶 > monitor > DropMonitor")]),_:1})]),R,a("h3",x,[_,n(" onListenDrag "),s(r,{text:"1.1.0+",vertical:"top"})]),E,a("p",null,[s(o,{to:"/extras.html#%E6%8B%96%E6%8B%BD%E5%85%A8%E5%B1%80%E7%9B%91%E5%90%AC%E6%96%B9%E6%B3%95"},{default:p(()=>[n("进阶 > 拖拽全局监听方法")]),_:1})])])}const M=l(u,[["render",w],["__file","index.html.vue"]]);export{M as default};
